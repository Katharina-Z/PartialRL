using JuMP
using Ipopt

import .CleanData.RewSum

m = Model(with_optimizer(Ipopt.Optimizer))

@variable(m, 0.5 <= Ur <= 1.5)
@variable(m, 0.1 <= Cu <= 1)
@variable(m, 0.01 <= Cv <= 0.05)
@variable(m, 0 <= FutRew <=20)


RewSch = 0.2 #Change depending on schedule
Tau = 7000 #ms, get from data
AvRew = 0.05 #reward per ms, calculate for every time point

@variable(m, AvRew)

RewSum = CleanData.RewSum
AvRew = (RewSum - Cu) / TauSum

@NLobjective(m, Max, (RewSch*Ur) - Cu - (Cv/Tau) - (AvRew*Tau) + FutRew )

print(m)

status = optimize!(m)

println("Objective value: ", JuMP.objective_value(m))
println("Ur = ", JuMP.value(Ur))
println("Cu = ", JuMP.value(Cu))
println("Cv = ", JuMP.value(Cv))
println("FutRew = ", JuMP.value(FutRew))
